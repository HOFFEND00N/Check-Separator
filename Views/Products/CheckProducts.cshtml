@model CheckSeparatorMVC.ViewModels.CheckAndUserModel

@{
    ViewData["Title"] = "Product list";
}

<form asp-action="ViewAddProduct">
    <input type="submit" class="btn btn-primary" value="Add Product" />
    <input type="hidden" name="CheckId" value="@Model.Check.CheckId" />
</form>

<form asp-controller="Products" asp-action="SaveChangesInCheck">

    <table>
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Price
                </th>
                <th>
                    Amount
                </th>
                <th>
                    Is selected
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Check.Products is null || Model.Check.Products.Count() == 0)
            {
                <p>
                    There is no products!
                </p>
            }
            else
            {
                @for (int i = 0; i < Model.Check.Products.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Check.Products[i].Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Check.Products[i].Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Check.Products[i].Amount)
                        </td>
                        <td>
                            @if (Model.Check.Products[i].IsChecked == false)
                            {
                                <input type="checkbox" name="model.Products[@i].IsChecked" value="true" />
                            }
                            else
                            {
                                <input type="checkbox" name="model.Products[@i].IsChecked" value="true" checked />
                            }
                            <input type="hidden" name="model.Products[@i].Name" value="@Model.Check.Products[i].Name" />
                            <input type="hidden" name="model.Products[@i].Price" value="@Model.Check.Products[i].Price" />
                            <input type="hidden" name="model.Products[@i].Amount" value="@Model.Check.Products[i].Amount" />
                            <input type="hidden" name="model.Products[@i].ProductId" value="@Model.Check.Products[i].ProductId" />
                            <input type="hidden" name="model.Products[@i].CheckId" value="@Model.Check.Products[i].CheckId" />
                        </td>
                        <td>
                            <a asp-action="DeleteProduct" asp-route-id="@Model.Check.Products[i].ProductId"> Delete </a> |
                            <a asp-action="EditProduct" asp-route-id="@Model.Check.Products[i].ProductId"> Edit </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <input type="hidden" name="model.OwnerName" value="@Model.Check.OwnerName" />
    <input type="hidden" name="model.CheckId" value="@Model.Check.CheckId" />
    <input type="hidden" name="model.OwnerId" value="@Model.Check.OwnerId" />
    <input type="submit" value="Save changes" class="btn btn-primary" />
</form>
@if (Model.Check.OwnerId == Model.User.Id)
{
    <form asp-action="CalculateCheck">
        <input type="submit" value="Calculate Check" class="btn btn-primary" />
        <input type="hidden" name="CheckId" value="@Model.Check.CheckId">
    </form>
    <form asp-action="ViewAddUserToCheck">
        <input type="submit" value="Add user to check" class="btn btn-primary"/>
        <input type="hidden" name="CheckId" value="@Model.Check.CheckId"/>
    </form>
}



